{"version":3,"file":"static/js/818.a7ea9b23.chunk.js","mappings":"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","sources":["../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/core/Camera.js","components/CircularGallery/CircularGallery.js"],"sourcesContent":["// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            wrapR = gl.CLAMP_TO_EDGE,\n            generateMipmaps = target === (gl.TEXTURE_2D || gl.TEXTURE_CUBE_MAP),\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == (gl.TEXTURE_2D || gl.TEXTURE_3D) ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n            length = 1,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.wrapR = wrapR;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.length = length;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.wrapR !== this.state.wrapR) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_R, this.wrapR);\n            this.state.wrapR = this.wrapR;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(this.target, this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropy);\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, this.level, this.internalFormat, this.format, this.type, this.image[i]);\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n                } else if (this.target === this.gl.TEXTURE_2D_ARRAY || this.target === this.gl.TEXTURE_3D) {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, this.image);\n                }\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(this.target, level, this.internalFormat, this.image[level].width, this.image[level].height, 0, this.image[level].data);\n                }\n            } else {\n                // Regular texture\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n                } else {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, this.image);\n                }\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n                } else {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, null);\n                }\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\nconst tempVec3a = /* @__PURE__ */ new Vec3();\nconst tempVec3b = /* @__PURE__ */ new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left || -1,\n        right = this.right || 1,\n        bottom = this.bottom || -1,\n        top = this.top || 1,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    updateProjectionMatrix() {\n        if (this.type === 'perspective') {\n            return this.perspective();\n        } else {\n            return this.orthographic();\n        }\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node, worldMatrix = node.worldMatrix) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(worldMatrix);\n\n        const radius = node.geometry.bounds.radius * worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","import { Camera, Mesh, Plane, Program, Renderer, Texture, Transform } from \"ogl\";\r\nimport { useEffect, useRef, useCallback, useState } from \"react\";\r\nimport \"./CircularGallery.css\";\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(this, args), wait);\r\n  };\r\n}\r\n\r\nfunction lerp(p1, p2, t) {\r\n  return p1 + (p2 - p1) * t;\r\n}\r\n\r\nfunction autoBind(instance) {\r\n  const proto = Object.getPrototypeOf(instance);\r\n  Object.getOwnPropertyNames(proto).forEach((key) => {\r\n    if (key !== \"constructor\" && typeof instance[key] === \"function\") {\r\n      instance[key] = instance[key].bind(instance);\r\n    }\r\n  });\r\n}\r\n\r\nfunction createTextTexture(gl, text, font = \"bold 30px monospace\", color = \"black\") {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  context.font = font;\r\n  const metrics = context.measureText(text);\r\n  const textWidth = Math.ceil(metrics.width);\r\n  const textHeight = Math.ceil(parseInt(font, 10) * 1.2);\r\n  canvas.width = textWidth + 20;\r\n  canvas.height = textHeight + 20;\r\n  context.font = font;\r\n  context.fillStyle = color;\r\n  context.textBaseline = \"middle\";\r\n  context.textAlign = \"center\";\r\n  context.clearRect(0, 0, canvas.width, canvas.height);\r\n  context.fillText(text, canvas.width / 2, canvas.height / 2);\r\n  const texture = new Texture(gl, { generateMipmaps: false });\r\n  texture.image = canvas;\r\n  return { texture, width: canvas.width, height: canvas.height };\r\n}\r\n\r\nclass Title {\r\n  constructor({ gl, plane, renderer, text, textColor = \"#545050\", font = \"30px sans-serif\" }) {\r\n    autoBind(this);\r\n    this.gl = gl;\r\n    this.plane = plane;\r\n    this.renderer = renderer;\r\n    this.text = text;\r\n    this.textColor = textColor;\r\n    this.font = font;\r\n    this.createMesh();\r\n  }\r\n\r\n  createMesh() {\r\n    try {\r\n      const { texture, width, height } = createTextTexture(this.gl, this.text, this.font, this.textColor);\r\n      const geometry = new Plane(this.gl);\r\n      const program = new Program(this.gl, {\r\n        vertex: `\r\n          attribute vec3 position;\r\n          attribute vec2 uv;\r\n          uniform mat4 modelViewMatrix;\r\n          uniform mat4 projectionMatrix;\r\n          varying vec2 vUv;\r\n          void main() {\r\n            vUv = uv;\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n          }\r\n        `,\r\n        fragment: `\r\n          precision highp float;\r\n          uniform sampler2D tMap;\r\n          varying vec2 vUv;\r\n          void main() {\r\n            vec4 color = texture2D(tMap, vUv);\r\n            if (color.a < 0.1) discard;\r\n            gl_FragColor = color;\r\n          }\r\n        `,\r\n        uniforms: { tMap: { value: texture } },\r\n        transparent: true,\r\n      });\r\n      this.mesh = new Mesh(this.gl, { geometry, program });\r\n      const aspect = width / height;\r\n      const textHeight = this.plane.scale.y * 0.15;\r\n      const textWidth = textHeight * aspect;\r\n      this.mesh.scale.set(textWidth, textHeight, 1);\r\n      this.mesh.position.y = -this.plane.scale.y * 0.5 - textHeight * 0.5 - 0.05;\r\n      this.mesh.setParent(this.plane);\r\n    } catch (error) {\r\n      console.warn('Failed to create title mesh:', error);\r\n    }\r\n  }\r\n}\r\n\r\nclass Media {\r\n  constructor({\r\n    geometry,\r\n    gl,\r\n    image,\r\n    index,\r\n    length,\r\n    renderer,\r\n    scene,\r\n    screen,\r\n    text,\r\n    viewport,\r\n    bend,\r\n    textColor,\r\n    borderRadius = 0,\r\n    font,\r\n    onCertificateClick, // **NEW: Click handler**\r\n  }) {\r\n    this.extra = 0;\r\n    this.geometry = geometry;\r\n    this.gl = gl;\r\n    this.image = image;\r\n    this.index = index;\r\n    this.length = length;\r\n    this.renderer = renderer;\r\n    this.scene = scene;\r\n    this.screen = screen;\r\n    this.text = text;\r\n    this.viewport = viewport;\r\n    this.bend = bend;\r\n    this.textColor = textColor;\r\n    this.borderRadius = borderRadius;\r\n    this.font = font;\r\n    this.onCertificateClick = onCertificateClick; // **NEW**\r\n    this.createShader();\r\n    this.createMesh();\r\n    this.createTitle();\r\n    this.onResize();\r\n  }\r\n\r\n  createShader() {\r\n    try {\r\n      const texture = new Texture(this.gl, { generateMipmaps: false });\r\n      this.program = new Program(this.gl, {\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        vertex: `\r\n          precision highp float;\r\n          attribute vec3 position;\r\n          attribute vec2 uv;\r\n          uniform mat4 modelViewMatrix;\r\n          uniform mat4 projectionMatrix;\r\n          uniform float uTime;\r\n          uniform float uSpeed;\r\n          varying vec2 vUv;\r\n          void main() {\r\n            vUv = uv;\r\n            vec3 p = position;\r\n            p.z = (sin(p.x * 4.0 + uTime) * 1.5 + cos(p.y * 2.0 + uTime) * 1.5) * (0.1 + uSpeed * 0.5);\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\r\n          }\r\n        `,\r\n        fragment: `\r\n          precision highp float;\r\n          uniform vec2 uImageSizes;\r\n          uniform vec2 uPlaneSizes;\r\n          uniform sampler2D tMap;\r\n          uniform float uBorderRadius;\r\n          varying vec2 vUv;\r\n          \r\n          float roundedBoxSDF(vec2 p, vec2 b, float r) {\r\n            vec2 d = abs(p) - b;\r\n            return length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0) - r;\r\n          }\r\n          \r\n          void main() {\r\n            vec2 ratio = vec2(\r\n              min((uPlaneSizes.x / uPlaneSizes.y) / (uImageSizes.x / uImageSizes.y), 1.0),\r\n              min((uPlaneSizes.y / uPlaneSizes.x) / (uImageSizes.y / uImageSizes.x), 1.0)\r\n            );\r\n            vec2 uv = vec2(\r\n              vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\r\n              vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\r\n            );\r\n            vec4 color = texture2D(tMap, uv);\r\n            \r\n            float d = roundedBoxSDF(vUv - 0.5, vec2(0.5 - uBorderRadius), uBorderRadius);\r\n            if(d > 0.0) {\r\n              discard;\r\n            }\r\n            \r\n            gl_FragColor = vec4(color.rgb, 1.0);\r\n          }\r\n        `,\r\n        uniforms: {\r\n          tMap: { value: texture },\r\n          uPlaneSizes: { value: [0, 0] },\r\n          uImageSizes: { value: [0, 0] },\r\n          uSpeed: { value: 0 },\r\n          uTime: { value: 100 * Math.random() },\r\n          uBorderRadius: { value: this.borderRadius },\r\n        },\r\n        transparent: true,\r\n      });\r\n\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.src = this.image;\r\n      img.onload = () => {\r\n        texture.image = img;\r\n        this.program.uniforms.uImageSizes.value = [img.naturalWidth, img.naturalHeight];\r\n      };\r\n      img.onerror = (error) => {\r\n        console.warn('Failed to load image:', this.image, error);\r\n      };\r\n    } catch (error) {\r\n      console.warn('Failed to create shader for media:', error);\r\n    }\r\n  }\r\n\r\n  createMesh() {\r\n    try {\r\n      this.plane = new Mesh(this.gl, {\r\n        geometry: this.geometry,\r\n        program: this.program,\r\n      });\r\n      this.plane.setParent(this.scene);\r\n      \r\n      // **NEW: Store certificate data for click detection**\r\n      this.plane.userData = {\r\n        image: this.image,\r\n        text: this.text,\r\n        index: this.index\r\n      };\r\n    } catch (error) {\r\n      console.warn('Failed to create mesh:', error);\r\n    }\r\n  }\r\n\r\n  createTitle() {\r\n    try {\r\n      this.title = new Title({\r\n        gl: this.gl,\r\n        plane: this.plane,\r\n        renderer: this.renderer,\r\n        text: this.text,\r\n        textColor: this.textColor,\r\n        font: this.font,\r\n      });\r\n    } catch (error) {\r\n      console.warn('Failed to create title:', error);\r\n    }\r\n  }\r\n\r\n  update(scroll, direction) {\r\n    if (!this.plane) return;\r\n    \r\n    this.plane.position.x = this.x - scroll.current - this.extra;\r\n\r\n    const x = this.plane.position.x;\r\n    const H = this.viewport.width / 2;\r\n\r\n    if (this.bend === 0) {\r\n      this.plane.position.y = 0;\r\n      this.plane.rotation.z = 0;\r\n    } else {\r\n      const B_abs = Math.abs(this.bend);\r\n      const R = (H * H + B_abs * B_abs) / (2 * B_abs);\r\n      const effectiveX = Math.min(Math.abs(x), H);\r\n\r\n      const arc = R - Math.sqrt(R * R - effectiveX * effectiveX);\r\n      if (this.bend > 0) {\r\n        this.plane.position.y = -arc;\r\n        this.plane.rotation.z = -Math.sign(x) * Math.asin(effectiveX / R);\r\n      } else {\r\n        this.plane.position.y = arc;\r\n        this.plane.rotation.z = Math.sign(x) * Math.asin(effectiveX / R);\r\n      }\r\n    }\r\n\r\n    this.speed = scroll.current - scroll.last;\r\n    if (this.program && this.program.uniforms) {\r\n      this.program.uniforms.uTime.value += 0.04;\r\n      this.program.uniforms.uSpeed.value = this.speed;\r\n    }\r\n\r\n    const planeOffset = this.plane.scale.x / 2;\r\n    const viewportOffset = this.viewport.width / 2;\r\n    this.isBefore = this.plane.position.x + planeOffset < -viewportOffset;\r\n    this.isAfter = this.plane.position.x - planeOffset > viewportOffset;\r\n    \r\n    if (direction === \"right\" && this.isBefore) {\r\n      this.extra -= this.widthTotal;\r\n      this.isBefore = this.isAfter = false;\r\n    }\r\n    if (direction === \"left\" && this.isAfter) {\r\n      this.extra += this.widthTotal;\r\n      this.isBefore = this.isAfter = false;\r\n    }\r\n  }\r\n\r\n  onResize({ screen, viewport } = {}) {\r\n    if (screen) this.screen = screen;\r\n    if (viewport) {\r\n      this.viewport = viewport;\r\n      if (this.plane && this.plane.program && this.plane.program.uniforms.uViewportSizes) {\r\n        this.plane.program.uniforms.uViewportSizes.value = [this.viewport.width, this.viewport.height];\r\n      }\r\n    }\r\n    \r\n    this.scale = this.screen.height / 1200;\r\n    \r\n    const baseWidth = 900;\r\n    const baseHeight = 600;\r\n    \r\n    if (this.plane) {\r\n      this.plane.scale.x = (this.viewport.width * (baseWidth * this.scale)) / this.screen.width;\r\n      this.plane.scale.y = (this.viewport.height * (baseHeight * this.scale)) / this.screen.height;\r\n      \r\n      const aspectRatio = baseWidth / baseHeight;\r\n      if (this.plane.scale.x / this.plane.scale.y < aspectRatio) {\r\n        this.plane.scale.y = this.plane.scale.x / aspectRatio;\r\n      } else {\r\n        this.plane.scale.x = this.plane.scale.y * aspectRatio;\r\n      }\r\n      \r\n      if (this.plane.program && this.plane.program.uniforms.uPlaneSizes) {\r\n        this.plane.program.uniforms.uPlaneSizes.value = [this.plane.scale.x, this.plane.scale.y];\r\n      }\r\n    }\r\n    \r\n    this.padding = 2;\r\n    this.width = (this.plane ? this.plane.scale.x : 0) + this.padding;\r\n    this.widthTotal = this.width * this.length;\r\n    this.x = this.width * this.index;\r\n  }\r\n}\r\n\r\nclass App {\r\n  constructor(\r\n    container,\r\n    {\r\n      items,\r\n      bend,\r\n      textColor = \"#ffffff\",\r\n      borderRadius = 0,\r\n      font = \"bold 30px Figtree\",\r\n      scrollSpeed = 2,\r\n      scrollEase = 0.05,\r\n      onCertificateClick, // **NEW: Click handler**\r\n    } = {}\r\n  ) {\r\n    if (!container) {\r\n      console.error('Container is required for CircularGallery');\r\n      return;\r\n    }\r\n\r\n    this.container = container;\r\n    this.scrollSpeed = scrollSpeed;\r\n    this.scroll = { ease: scrollEase, current: 0, target: 0, last: 0 };\r\n    this.onCheckDebounce = debounce(this.onCheck.bind(this), 200);\r\n    this.onCertificateClick = onCertificateClick; // **NEW**\r\n    \r\n    try {\r\n      this.createRenderer();\r\n      this.createCamera();\r\n      this.createScene();\r\n      this.onResize();\r\n      this.createGeometry();\r\n      this.createMedias(items, bend, textColor, borderRadius, font);\r\n      this.update();\r\n      this.addEventListeners();\r\n    } catch (error) {\r\n      console.error('Failed to initialize CircularGallery:', error);\r\n    }\r\n  }\r\n\r\n  createRenderer() {\r\n    try {\r\n      this.renderer = new Renderer({ alpha: true });\r\n      this.gl = this.renderer.gl;\r\n      this.gl.clearColor(0, 0, 0, 0);\r\n      this.container.appendChild(this.gl.canvas);\r\n      \r\n      // **NEW: Make canvas clickable**\r\n      this.gl.canvas.style.cursor = 'pointer';\r\n    } catch (error) {\r\n      console.error('Failed to create renderer:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  createCamera() {\r\n    this.camera = new Camera(this.gl);\r\n    this.camera.fov = 40;\r\n    this.camera.position.z = 18;\r\n  }\r\n\r\n  createScene() {\r\n    this.scene = new Transform();\r\n  }\r\n\r\n  createGeometry() {\r\n    try {\r\n      this.planeGeometry = new Plane(this.gl, {\r\n        heightSegments: 50,\r\n        widthSegments: 100,\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to create geometry:', error);\r\n    }\r\n  }\r\n\r\n  createMedias(items, bend = 1, textColor, borderRadius, font) {\r\n    const defaultItems = [\r\n      { image: `https://picsum.photos/900/600?grayscale&random=1`, text: \"Certificate 1\" },\r\n      { image: `https://picsum.photos/900/600?grayscale&random=2`, text: \"Certificate 2\" },\r\n      { image: `https://picsum.photos/900/600?grayscale&random=3`, text: \"Certificate 3\" },\r\n      { image: `https://picsum.photos/900/600?grayscale&random=4`, text: \"Certificate 4\" },\r\n    ];\r\n    \r\n    const galleryItems = items && items.length ? items : defaultItems;\r\n    this.mediasImages = galleryItems.concat(galleryItems);\r\n    \r\n    try {\r\n      this.medias = this.mediasImages.map((data, index) => {\r\n        return new Media({\r\n          geometry: this.planeGeometry,\r\n          gl: this.gl,\r\n          image: data.image,\r\n          index,\r\n          length: this.mediasImages.length,\r\n          renderer: this.renderer,\r\n          scene: this.scene,\r\n          screen: this.screen,\r\n          text: data.text,\r\n          viewport: this.viewport,\r\n          bend,\r\n          textColor,\r\n          borderRadius,\r\n          font,\r\n          onCertificateClick: this.onCertificateClick, // **NEW**\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to create medias:', error);\r\n    }\r\n  }\r\n\r\n  // **NEW: Click detection method**\r\n  onCanvasClick(e) {\r\n    if (!this.medias || !this.onCertificateClick) return;\r\n\r\n    const rect = this.gl.canvas.getBoundingClientRect();\r\n    const x = ((e.clientX - rect.left) / rect.width) * 2 - 1;\r\n    const y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n    // Simple click detection based on certificate positions\r\n    const clickThreshold = 0.5;\r\n    \r\n    this.medias.forEach((media) => {\r\n      if (!media.plane) return;\r\n      \r\n      const planeX = media.plane.position.x;\r\n      const planeY = media.plane.position.y;\r\n      \r\n      // Convert world coordinates to screen coordinates (simplified)\r\n      const screenX = (planeX / this.viewport.width) * 2;\r\n      const screenY = (planeY / this.viewport.height) * 2;\r\n      \r\n      const distance = Math.sqrt((x - screenX) ** 2 + (y - screenY) ** 2);\r\n      \r\n      if (distance < clickThreshold) {\r\n        this.onCertificateClick({\r\n          image: media.image,\r\n          text: media.text,\r\n          index: media.index\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onTouchDown(e) {\r\n    this.isDown = true;\r\n    this.scroll.position = this.scroll.current;\r\n    this.start = e.touches ? e.touches[0].clientX : e.clientX;\r\n    this.dragDistance = 0; // **NEW: Track drag distance**\r\n  }\r\n\r\n  onTouchMove(e) {\r\n    if (!this.isDown) return;\r\n    const x = e.touches ? e.touches[0].clientX : e.clientX;\r\n    const distance = (this.start - x) * (this.scrollSpeed * 0.025);\r\n    this.dragDistance = Math.abs(distance); // **NEW: Track drag distance**\r\n    this.scroll.target = this.scroll.position + distance;\r\n  }\r\n\r\n  onTouchUp(e) {\r\n    this.isDown = false;\r\n    \r\n    // **NEW: Only trigger click if drag distance is small**\r\n    if (this.dragDistance < 10) {\r\n      this.onCanvasClick(e);\r\n    }\r\n    \r\n    this.onCheck();\r\n  }\r\n\r\n  onWheel(e) {\r\n    const delta = e.deltaY || e.wheelDelta || e.detail;\r\n    this.scroll.target += (delta > 0 ? this.scrollSpeed : -this.scrollSpeed) * 0.2;\r\n    this.onCheckDebounce();\r\n  }\r\n\r\n  onCheck() {\r\n    if (!this.medias || !this.medias[0]) return;\r\n    const width = this.medias[0].width;\r\n    const itemIndex = Math.round(Math.abs(this.scroll.target) / width);\r\n    const item = width * itemIndex;\r\n    this.scroll.target = this.scroll.target < 0 ? -item : item;\r\n  }\r\n\r\n  onResize() {\r\n    if (!this.container) return;\r\n    \r\n    this.screen = {\r\n      width: this.container.clientWidth,\r\n      height: this.container.clientHeight,\r\n    };\r\n    \r\n    if (this.renderer) {\r\n      this.renderer.setSize(this.screen.width, this.screen.height);\r\n    }\r\n    \r\n    if (this.camera) {\r\n      this.camera.perspective({\r\n        aspect: this.screen.width / this.screen.height,\r\n      });\r\n    }\r\n    \r\n    const fov = (this.camera.fov * Math.PI) / 180;\r\n    const height = 2 * Math.tan(fov / 2) * this.camera.position.z;\r\n    const width = height * this.camera.aspect;\r\n    this.viewport = { width, height };\r\n    \r\n    if (this.medias) {\r\n      this.medias.forEach((media) => media.onResize({ screen: this.screen, viewport: this.viewport }));\r\n    }\r\n  }\r\n\r\n  update() {\r\n    if (!this.renderer || !this.scene || !this.camera) return;\r\n    \r\n    this.scroll.current = lerp(this.scroll.current, this.scroll.target, this.scroll.ease);\r\n    const direction = this.scroll.current > this.scroll.last ? \"right\" : \"left\";\r\n    \r\n    if (this.medias) {\r\n      this.medias.forEach((media) => media.update(this.scroll, direction));\r\n    }\r\n    \r\n    try {\r\n      this.renderer.render({ scene: this.scene, camera: this.camera });\r\n    } catch (error) {\r\n      console.warn('Render error:', error);\r\n    }\r\n    \r\n    this.scroll.last = this.scroll.current;\r\n    this.raf = window.requestAnimationFrame(this.update.bind(this));\r\n  }\r\n\r\n  addEventListeners() {\r\n    this.boundOnResize = this.onResize.bind(this);\r\n    this.boundOnWheel = this.onWheel.bind(this);\r\n    this.boundOnTouchDown = this.onTouchDown.bind(this);\r\n    this.boundOnTouchMove = this.onTouchMove.bind(this);\r\n    this.boundOnTouchUp = this.onTouchUp.bind(this);\r\n    this.boundOnCanvasClick = this.onCanvasClick.bind(this); // **NEW**\r\n    \r\n    window.addEventListener(\"resize\", this.boundOnResize);\r\n    window.addEventListener(\"mousewheel\", this.boundOnWheel);\r\n    window.addEventListener(\"wheel\", this.boundOnWheel);\r\n    window.addEventListener(\"mousedown\", this.boundOnTouchDown);\r\n    window.addEventListener(\"mousemove\", this.boundOnTouchMove);\r\n    window.addEventListener(\"mouseup\", this.boundOnTouchUp);\r\n    window.addEventListener(\"touchstart\", this.boundOnTouchDown);\r\n    window.addEventListener(\"touchmove\", this.boundOnTouchMove);\r\n    window.addEventListener(\"touchend\", this.boundOnTouchUp);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.raf) {\r\n      window.cancelAnimationFrame(this.raf);\r\n    }\r\n    \r\n    if (this.boundOnResize) window.removeEventListener(\"resize\", this.boundOnResize);\r\n    if (this.boundOnWheel) {\r\n      window.removeEventListener(\"mousewheel\", this.boundOnWheel);\r\n      window.removeEventListener(\"wheel\", this.boundOnWheel);\r\n    }\r\n    if (this.boundOnTouchDown) window.removeEventListener(\"mousedown\", this.boundOnTouchDown);\r\n    if (this.boundOnTouchMove) window.removeEventListener(\"mousemove\", this.boundOnTouchMove);\r\n    if (this.boundOnTouchUp) window.removeEventListener(\"mouseup\", this.boundOnTouchUp);\r\n    if (this.boundOnTouchDown) window.removeEventListener(\"touchstart\", this.boundOnTouchDown);\r\n    if (this.boundOnTouchMove) window.removeEventListener(\"touchmove\", this.boundOnTouchMove);\r\n    if (this.boundOnTouchUp) window.removeEventListener(\"touchend\", this.boundOnTouchUp);\r\n    \r\n    if (this.renderer && this.renderer.gl && this.renderer.gl.canvas && this.renderer.gl.canvas.parentNode) {\r\n      this.renderer.gl.canvas.parentNode.removeChild(this.renderer.gl.canvas);\r\n    }\r\n  }\r\n}\r\n\r\n// **NEW: Certificate Modal Component**\r\nconst CertificateModal = ({ certificate, onClose }) => {\r\n  if (!certificate) return null;\r\n\r\n  return (\r\n    <div className=\"certificate-modal-overlay\" onClick={onClose}>\r\n      <div className=\"certificate-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"certificate-modal-close\" onClick={onClose}>\r\n          ×\r\n        </button>\r\n        <div className=\"certificate-modal-image-container\">\r\n          <img \r\n            src={certificate.image} \r\n            alt={certificate.text}\r\n            className=\"certificate-modal-image\"\r\n          />\r\n        </div>\r\n        <div className=\"certificate-modal-info\">\r\n          <h3>{certificate.text}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function CircularGallery({\r\n  items,\r\n  bend = 3,\r\n  textColor = \"#ffffff\",\r\n  borderRadius = 0.05,\r\n  font = \"bold 24px Figtree\",\r\n  scrollSpeed = 2,\r\n  scrollEase = 0.05,\r\n}) {\r\n  const containerRef = useRef(null);\r\n  const appRef = useRef(null);\r\n  const [selectedCertificate, setSelectedCertificate] = useState(null); // **NEW: Modal state**\r\n  \r\n  // **NEW: Handle certificate click**\r\n  const handleCertificateClick = useCallback((certificateData) => {\r\n    setSelectedCertificate(certificateData);\r\n  }, []);\r\n\r\n  // **NEW: Handle modal close**\r\n  const handleCloseModal = useCallback(() => {\r\n    setSelectedCertificate(null);\r\n  }, []);\r\n  \r\n  const initializeApp = useCallback(() => {\r\n    if (!containerRef.current || appRef.current) return;\r\n    \r\n    try {\r\n      appRef.current = new App(containerRef.current, { \r\n        items, \r\n        bend, \r\n        textColor, \r\n        borderRadius, \r\n        font, \r\n        scrollSpeed, \r\n        scrollEase,\r\n        onCertificateClick: handleCertificateClick // **NEW: Pass click handler**\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to initialize CircularGallery app:', error);\r\n    }\r\n  }, [items, bend, textColor, borderRadius, font, scrollSpeed, scrollEase, handleCertificateClick]);\r\n\r\n  const destroyApp = useCallback(() => {\r\n    if (appRef.current) {\r\n      appRef.current.destroy();\r\n      appRef.current = null;\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(initializeApp, 100);\r\n    \r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n      destroyApp();\r\n    };\r\n  }, [initializeApp, destroyApp]);\r\n  \r\n  return (\r\n    <>\r\n      <div \r\n        className=\"circular-gallery\" \r\n        ref={containerRef} \r\n        style={{ \r\n          width: '100%', \r\n          height: '300px'\r\n        }} \r\n      />\r\n      \r\n      {/* **NEW: Certificate Modal** */}\r\n      <CertificateModal \r\n        certificate={selectedCertificate} \r\n        onClose={handleCloseModal} \r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["emptyPixel","Uint8Array","isPowerOf2","value","ID","Texture","constructor","gl","image","target","TEXTURE_2D","type","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","wrapR","generateMipmaps","TEXTURE_CUBE_MAP","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","premultiplyAlpha","unpackAlignment","flipY","TEXTURE_3D","anisotropy","level","width","height","length","arguments","undefined","this","id","Math","min","renderer","parameters","maxAnisotropy","texture","createTexture","store","glState","state","REPEAT","bind","textureUnits","activeTextureUnit","bindTexture","update","textureUnit","needsUpdate","activeTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","texParameterf","getExtension","TEXTURE_MAX_ANISOTROPY_EXT","i","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","TEXTURE_2D_ARRAY","texImage3D","isCompressedTexture","compressedTexImage2D","data","isWebgl2","generateMipmap","onUpdate","Plane","Geometry","widthSegments","heightSegments","attributes","wSegs","hSegs","num","numIndices","position","Float32Array","normal","uv","index","Uint32Array","Uint16Array","buildPlane","Object","assign","size","super","depth","u","v","w","uDir","vDir","ii","io","segW","segH","iy","y","ix","x","a","b","c","d","tempMat4","Mat4","tempVec3a","Vec3","tempVec3b","Camera","Transform","near","far","fov","aspect","left","right","bottom","top","zoom","projectionMatrix","viewMatrix","projectionViewMatrix","worldPosition","orthographic","perspective","fromPerspective","PI","fromOrthogonal","updateMatrixWorld","inverse","worldMatrix","getTranslation","multiply","updateProjectionMatrix","lookAt","project","applyMatrix4","unproject","updateFrustum","frustum","m","set","constant","invLen","distance","frustumIntersectsMesh","node","geometry","bounds","radius","Infinity","computeBoundingSphere","center","copy","getMaxScaleOnAxis","frustumIntersectsSphere","plane","dot","Title","_ref","text","textColor","font","instance","proto","getPrototypeOf","getOwnPropertyNames","forEach","key","autoBind","createMesh","color","canvas","document","createElement","context","getContext","metrics","measureText","textWidth","ceil","textHeight","parseInt","fillStyle","textBaseline","textAlign","clearRect","fillText","createTextTexture","program","Program","vertex","fragment","uniforms","tMap","transparent","mesh","Mesh","scale","setParent","error","console","warn","Media","_ref2","scene","screen","viewport","bend","borderRadius","onCertificateClick","extra","createShader","createTitle","onResize","depthTest","depthWrite","uPlaneSizes","uImageSizes","uSpeed","uTime","random","uBorderRadius","img","Image","crossOrigin","src","onload","naturalWidth","naturalHeight","onerror","userData","title","scroll","direction","current","H","rotation","z","B_abs","abs","R","effectiveX","arc","sqrt","sign","asin","speed","last","planeOffset","viewportOffset","isBefore","isAfter","widthTotal","uViewportSizes","aspectRatio","baseWidth","padding","App","container","items","scrollSpeed","scrollEase","ease","onCheckDebounce","func","wait","timeout","_len","args","Array","_key","clearTimeout","setTimeout","apply","debounce","onCheck","createRenderer","createCamera","createScene","createGeometry","createMedias","addEventListeners","Renderer","alpha","clearColor","appendChild","style","cursor","camera","planeGeometry","defaultItems","galleryItems","mediasImages","concat","medias","map","onCanvasClick","e","rect","getBoundingClientRect","clientX","clientY","media","planeX","planeY","screenX","screenY","onTouchDown","isDown","start","touches","dragDistance","onTouchMove","onTouchUp","onWheel","delta","deltaY","wheelDelta","detail","item","round","clientWidth","clientHeight","setSize","tan","p1","p2","t","render","raf","window","requestAnimationFrame","boundOnResize","boundOnWheel","boundOnTouchDown","boundOnTouchMove","boundOnTouchUp","boundOnCanvasClick","addEventListener","destroy","cancelAnimationFrame","removeEventListener","parentNode","removeChild","CertificateModal","_ref3","certificate","onClose","_jsx","className","onClick","children","_jsxs","stopPropagation","alt","CircularGallery","_ref4","containerRef","useRef","appRef","selectedCertificate","setSelectedCertificate","useState","handleCertificateClick","useCallback","certificateData","handleCloseModal","initializeApp","destroyApp","useEffect","timeoutId","_Fragment","ref"],"sourceRoot":""}